spring:
jdbc.time_zone: UTC


flyway:
enabled: true
# By default Flyway uses the primary DataSource above.
# If you need a separate connection, uncomment and mirror the same Aiven URL/creds.
# url: ${DB_URL}
# user: ${DB_USER}
# password: ${DB_PASSWORD}


server:
port: ${SERVER_PORT:8080}


# JWT config consumed by JwtService
app:
security:
jwt:
secret: ${JWT_SECRET:dev-secret-change-me}
expiration: ${JWT_EXPIRATION_MS:3600000} # 1 hour


# Logging: keep SQL logs reasonable in production; override in -dev profile later
logging:
level:
org.hibernate.SQL: WARN
org.springframework.security: INFO


# Thymeleaf defaults are fine for prod; we'll disable cache in application-dev.yml later
# spring:
# thymeleaf:
# cache: true
```yaml
spring:
application:
name: metabase-demo
```

datasource:
# Aiven Postgres: passare host/porta/db/utente/password via env vars.
# Se avete il certificato CA di Aiven e volete validazione completa,
# usate `sslmode=verify-full` e aggiungete `&sslrootcert=/path/ca.pem`.
url: jdbc:postgresql://${AIVEN_PG_HOST:${DB_HOST}}:${AIVEN_PG_PORT:${DB_PORT:5432}}/${AIVEN_PG_DB:${DB_NAME}}?sslmode=require
username: ${AIVEN_PG_USER:${DB_USER}}
password: ${AIVEN_PG_PASSWORD:${DB_PASSWORD}}
hikari:
maximum-pool-size: 10
connection-timeout: 30000


jpa:
open-in-view: false
hibernate:
ddl-auto: validate
properties:
hibernate:
format_sql: true
jdbc.time_zone: UTC


flyway:
enabled: true
locations: classpath:db/migration


server:
port: ${PORT:8080}


app:
security:
jwt:
secret: ${JWT_SECRET:change-me}
expiration: ${JWT_EXPIRATION_MS:3600000}


management:
endpoints:
web:
exposure:
include: health,info
endpoint:
health:
probes:
enabled: true